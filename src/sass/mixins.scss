
$legacy-support-for-ie: true !default;
$inline-block-alignment: middle !default;

$ease-out-function: cubic-bezier(0.23, 1, 0.32, 1);


@mixin clearfix {
  *zoom: 1;

  &:after {
    content: '\200B';
    display: block;
    height: 0;
    clear: both;
  }
}

%clearfix {
  @include clearfix;
}

@mixin inline-block($alignment: $inline-block-alignment) {
  display: inline-block;

  @if $alignment and $alignment != none {
    vertical-align: $alignment;
  }
  @if $legacy-support-for-ie {
    *vertical-align: auto;
    *zoom: 1;
    *display: inline;
  }
}

@mixin ease-out($duration: 450ms, $property: all, $delay: 0ms) {
  transition: $property $duration $ease-out-function $delay;
}

@mixin pulsate($animation-name, $start-size: 0.75, $end-size: 1, $duration: 1.5s) {

  @keyframes #{$animation-name} {
    0%   { transform: scale($start-size); }
    50%  { transform: scale($end-size);   }
    100% { transform: scale($start-size); }
  }

  animation: $animation-name $duration infinite;

}

@mixin bg-linear-gradient($from-color:#563d7c, $to-color:#6f5499) {
  background-image: -webkit-gradient(linear, left top, left bottom, from($from-color), to($to-color));
  background-image: -webkit-linear-gradient(top, $from-color 0%, $to-color 100%);
  background-image:      -o-linear-gradient(top, $from-color 0%, $to-color 100%);
  background-image:         linear-gradient(to bottom, $from-color 0%, $to-color 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='$from-color', endColorstr='$to-color', GradientType=0);
  background-repeat: repeat-x;
}
